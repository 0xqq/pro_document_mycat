1：需要分区的表
t_bet_order  [BET_TIME]
t_report_game  [REPORT_DATE]
t_report_team  [REPORT_DATE]
t_report_team_platform  [REPORT_DATE]
t_report_tenant  [REPORT_DATE]
t_report_tenant_platform  [REPORT_DATE]
t_report_user  [REPORT_DATE]
t_report_user_platform  [REPORT_DATE]
t_transaction  [TRANSACTION_TIME]
t_lottery_number  [OPERATE_TIME]

注意：
因为测试小时分区的需要，需要把data

2：每个表分区脚本
t_bet_order  [BET_TIME]
因为BET_TIME是timestamp类型，所以不能使用普通的时间进行分区，只能使用UNIX_TIMESTAMP
ALTER TABLE t_bet_order MODIFY COLUMN BET_TIME timestamp not NULL COMMENT '投注时间';
ALTER TABLE t_bet_order PARTITION BY RANGE (UNIX_TIMESTAMP(BET_TIME))(
	PARTITION t_bet_order_201809 VALUES LESS THAN (UNIX_TIMESTAMP('2018-10-01 00:00:00'))ENGINE = INNODB,
	PARTITION t_bet_order_201810 VALUES LESS THAN (UNIX_TIMESTAMP('2018-11-01 00:00:00'))ENGINE = INNODB,
	PARTITION t_bet_order_201811 VALUES LESS THAN (UNIX_TIMESTAMP('2018-12-01 00:00:00'))ENGINE = INNODB,
	PARTITION t_bet_order_201812 VALUES LESS THAN (UNIX_TIMESTAMP('2019-01-01 00:00:00'))ENGINE = INNODB,
	PARTITION t_bet_order_201901 VALUES LESS THAN (UNIX_TIMESTAMP('2019-02-01 00:00:00'))ENGINE = INNODB,
	PARTITION t_bet_order_201902 VALUES LESS THAN (UNIX_TIMESTAMP('2019-03-01 00:00:00'))ENGINE = INNODB,
	PARTITION t_bet_order_201903 VALUES LESS THAN (UNIX_TIMESTAMP('2019-04-01 00:00:00'))ENGINE = INNODB,
	PARTITION t_bet_order_201904 VALUES LESS THAN (UNIX_TIMESTAMP('2019-05-01 00:00:00'))ENGINE = INNODB,
	PARTITION t_bet_order_201905 VALUES LESS THAN (UNIX_TIMESTAMP('2019-06-01 00:00:00'))ENGINE = INNODB,
	PARTITION t_bet_order_201906 VALUES LESS THAN (UNIX_TIMESTAMP('2019-07-01 00:00:00'))ENGINE = INNODB,
	PARTITION t_bet_order_201907 VALUES LESS THAN (MAXVALUE)ENGINE = INNODB
);

因为需要把分区字段加入到注解中所以目前只能删表重建
drop table if exists t_bet_order;
CREATE TABLE `t_bet_order` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `TENANT_CODE` varchar(10) NOT NULL COMMENT '租户代号',
  `USER_ID` int(11) NOT NULL COMMENT '用户ID',
  `USER_NAME` varchar(16) NOT NULL COMMENT '用户帐号',
  `ORDERNO` varchar(40) NOT NULL COMMENT '投注单号',
  `BATCH_ORDERNO` varchar(40) DEFAULT NULL COMMENT '单次投注记录批处理单号',
  `GAME_ID` int(11) NOT NULL COMMENT '彩种ID',
  `LOTTERY_NUMBER_ID` int(11) NOT NULL COMMENT '彩种期号ID',
  `BET_ID` int(11) NOT NULL COMMENT '投注类型Id',
  `BET_SINGLE_AMOUNT` decimal(15,5) DEFAULT '0.00000' COMMENT '单注金额 - 2元',
  `BET_MULTIPLE` int(11) DEFAULT '1' COMMENT '投注倍数',
  `BET_COUNT` int(11) NOT NULL COMMENT '投注注数',
  `BET_DIGITS` varchar(100) NOT NULL COMMENT '投注位',
  `BET_NUMBER` longtext NOT NULL COMMENT '投注号码',
  `BET_REBATE_STATUS` tinyint(2) DEFAULT NULL COMMENT '投注返点派发状态',
  `BET_SECRET` varchar(32) DEFAULT NULL COMMENT '投注加密信息',
  `BET_TIME` timestamp NOT NULL COMMENT '投注时间',
  `BET_TOTAL_AMOUNT` decimal(15,5) DEFAULT '0.00000' COMMENT '投注总额',
  `BET_WAY` tinyint(2) DEFAULT NULL COMMENT '投注方式,0普通，1追号',
  `LOTTERY_NUMBER` varchar(100) DEFAULT NULL COMMENT '开奖号码',
  `ORDER_STATUS` tinyint(2) DEFAULT NULL COMMENT '订单状态',
  `WIN_AMOUNT` decimal(15,5) DEFAULT '0.00000' COMMENT '中奖金额',
  `WIN_COUNT` int(11) DEFAULT '0' COMMENT '中奖注数',
  `WIN_SECRET` varchar(32) DEFAULT NULL COMMENT 'WIN_SECRET',
  `WIN_STATUS` tinyint(2) DEFAULT NULL COMMENT '开奖状态',
  `AGENT_REBATE_STATUS` tinyint(2) DEFAULT NULL COMMENT '代理返点派发状态',
  `AGENT_REBATE_AMOUNT` decimal(15,5) DEFAULT NULL COMMENT '代理返点金额（取消， 不做统计）',
  `AWARD_STATUS` tinyint(2) DEFAULT NULL COMMENT '派奖状态',
  `AWARD_TIME` timestamp NULL DEFAULT NULL COMMENT '派奖时间',
  `REBATE_AMOUNT` decimal(15,5) DEFAULT '0.00000' COMMENT '投注返点金额',
  `REBATE_CHOOSE` decimal(15,5) DEFAULT '0.00000' COMMENT '所选返点',
  `REBATE_USER` decimal(15,5) DEFAULT NULL COMMENT '用户返点',
  `CHASE_NUMBER_ID` int(11) DEFAULT NULL COMMENT '追号号码ID',
  `CHASE_ORDER_ID` int(11) DEFAULT NULL COMMENT '追号记录ID',
  `ODDS` decimal(15,5) DEFAULT '0.00000' COMMENT '赔率',
  `DEVICE` tinyint(2) DEFAULT NULL COMMENT '投注设备',
  `LAST_MODIFIED_BY` varchar(16) DEFAULT NULL COMMENT '最后修改人',
  `LAST_MODIFIED_DATE` timestamp NULL DEFAULT NULL COMMENT '最后修改时间',
  `ADAPT` tinyint(2) DEFAULT '0' COMMENT '适应赔率(如果为0,取本表的odds字段作为赔率),如果为1,则取赔率表的赔率开奖',
  `PLATFORM_TYPE` tinyint(2) NOT NULL COMMENT '平台类型',
  `ROOM_ID` int(11) DEFAULT NULL COMMENT '房间id',
  PRIMARY KEY (`id`,`BET_TIME`),
  KEY `IDX_USER_ID` (`USER_ID`) USING BTREE,
  KEY `IDX_BET_ID` (`BET_ID`) USING BTREE,
  KEY `IDX_LOTTERY_NUMBER_ID` (`LOTTERY_NUMBER_ID`) USING BTREE,
  KEY `IDX.GAME_ID` (`GAME_ID`) USING BTREE,
  KEY `IDX_TENANT_CODE_BET_TIME` (`TENANT_CODE`,`BET_TIME`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='投注记录表'

t_report_team  [REPORT_DATE]
ALTER TABLE t_report_team PARTITION BY RANGE (to_days(REPORT_DATE))(
	PARTITION t_report_team_201809 VALUES LESS THAN (to_days('2018-10-01'))ENGINE = InnoDB,
	PARTITION t_report_team_201810 VALUES LESS THAN (to_days('2018-11-01'))ENGINE = InnoDB,
	PARTITION t_report_team_201811 VALUES LESS THAN (to_days('2018-12-01'))ENGINE = InnoDB,
	PARTITION t_report_team_201812 VALUES LESS THAN (to_days('2019-01-01'))ENGINE = InnoDB,
	PARTITION t_report_team_201901 VALUES LESS THAN (to_days('2019-02-01'))ENGINE = InnoDB,
	PARTITION t_report_team_201902 VALUES LESS THAN (to_days('2019-03-01'))ENGINE = InnoDB,
	PARTITION t_report_team_201903 VALUES LESS THAN (to_days('2019-04-01'))ENGINE = InnoDB,
	PARTITION t_report_team_201904 VALUES LESS THAN (to_days('2019-05-01'))ENGINE = InnoDB,
	PARTITION t_report_team_201905 VALUES LESS THAN (to_days('2019-06-01'))ENGINE = InnoDB,
	PARTITION t_report_team_201906 VALUES LESS THAN (to_days('2019-07-01'))ENGINE = InnoDB,
	PARTITION t_report_team_201907 VALUES LESS THAN (MAXVALUE)ENGINE = InnoDB
);

drop table if exists t_report_team;
CREATE TABLE `t_report_team` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `USER_ID` int(11) NOT NULL COMMENT '用户ID',
  `PARENT_ID` int(11) DEFAULT NULL COMMENT '直属上级ID',
  `FLOOR` tinyint(4) DEFAULT NULL COMMENT '所在层级',
  `USER_NAME` varchar(16) NOT NULL COMMENT '用户帐号',
  `ACTIVE_USERS` int(11) DEFAULT '0' COMMENT '有效用户数',
  `LOGINED_USERS` int(11) DEFAULT '0' COMMENT '登录用户数',
  `REGISTERED_USERS` int(11) DEFAULT '0' COMMENT '新增注册用户数',
  `RECHARGE_TIMES` int(11) DEFAULT '0' COMMENT '用户充值次数',
  `RECHARGE_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '用户充值总额',
  `TRANSFER_TIMES_RI` int(11) DEFAULT '0' COMMENT '上级转入次数',
  `TRAER_TIMES_RO` int(11) DEFAULT '0' COMMENT '转给下级次数',
  `TRANSFER_TOTAL_RI` decimal(18,5) DEFAULT '0.00000' COMMENT '上级转入总额',
  `TRANSFER_TOTAL_RO` decimal(18,5) DEFAULT '0.00000' COMMENT '转给下级总额',
  `BALANCE_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '平台账户余额',
  `WITHDRAW_TIMES` int(11) DEFAULT '0' COMMENT '用户提现次数',
  `WITHDRAW_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '用户提现总额',
  `ACTIVITY_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '活动赠送',
  `REPORT_DATE` date NOT NULL COMMENT '报表日期',
  `TENANT_CODE` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`,`REPORT_DATE`),
  UNIQUE KEY `UK_USER_ID_AND_REPORT_DATE` (`USER_ID`,`REPORT_DATE`) USING BTREE,
  KEY `IDX_USER_NAME` (`USER_NAME`) USING BTREE,
  KEY `IDX_REPORT_DATE` (`REPORT_DATE`) USING BTREE,
  KEY `IDX_TENANT_CODE` (`TENANT_CODE`) USING BTREE,
  KEY `IDX_PARENT_ID` (`PARENT_ID`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8

t_report_game  [REPORT_DATE]
ALTER TABLE t_report_game PARTITION BY RANGE (to_days(REPORT_DATE))(
	PARTITION t_report_game_201809 VALUES LESS THAN (to_days('2018-10-01'))ENGINE = InnoDB,
	PARTITION t_report_game_201810 VALUES LESS THAN (to_days('2018-11-01'))ENGINE = InnoDB,
	PARTITION t_report_game_201811 VALUES LESS THAN (to_days('2018-12-01'))ENGINE = InnoDB,
	PARTITION t_report_game_201812 VALUES LESS THAN (to_days('2019-01-01'))ENGINE = InnoDB,
	PARTITION t_report_game_201901 VALUES LESS THAN (to_days('2019-02-01'))ENGINE = InnoDB,
	PARTITION t_report_game_201902 VALUES LESS THAN (to_days('2019-03-01'))ENGINE = InnoDB,
	PARTITION t_report_game_201903 VALUES LESS THAN (to_days('2019-04-01'))ENGINE = InnoDB,
	PARTITION t_report_game_201904 VALUES LESS THAN (to_days('2019-05-01'))ENGINE = InnoDB,
	PARTITION t_report_game_201905 VALUES LESS THAN (to_days('2019-06-01'))ENGINE = InnoDB,
	PARTITION t_report_game_201906 VALUES LESS THAN (to_days('2019-07-01'))ENGINE = InnoDB,
	PARTITION t_report_game_201907 VALUES LESS THAN (MAXVALUE)ENGINE = InnoDB
);

drop table if exists t_report_game;
CREATE TABLE `t_report_game` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `TENANT_CODE` varchar(10) NOT NULL COMMENT '租户代号',
  `AUTO_LOTTERY_ISSUE_COUNT` int(11) DEFAULT '0' COMMENT '自动开奖期数',
  `CP_AGENT_REBATE_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '已结算彩票代理返点金额',
  `CP_BET_GAIN_TOTAL` decimal(15,5) DEFAULT '0.00000' COMMENT '已结算彩票投注盈亏',
  `CP_BET_ORDERS` int(11) DEFAULT '0' COMMENT '已结算彩票注单数',
  `CP_BET_REBATE_TOTAL` decimal(15,5) DEFAULT '0.00000' COMMENT '已结算彩票投注返点金额',
  `CP_BET_TOTAL` decimal(15,5) DEFAULT '0.00000' COMMENT '已结算彩票投注金额',
  `CP_REAL_GAIN_TOTAL` decimal(15,5) DEFAULT '0.00000' COMMENT '已结算彩票实际盈亏',
  `CP_UNSETTLED_ORDERS` int(11) DEFAULT '0' COMMENT '未结彩票注单数',
  `CP_UNSETTLED_TOTAL` decimal(15,5) DEFAULT '0.00000' COMMENT '彩票未结注单总额',
  `CP_WIN_ORDERS` int(11) DEFAULT '0' COMMENT '已结算彩票中奖注单数',
  `CP_WIN_TOTAL` decimal(15,5) DEFAULT '0.00000' COMMENT '已结算彩票中奖金额',
  `HAND_LOTTERY_ISSUE_COUNT` int(11) DEFAULT '0' COMMENT '人工开奖期数',
  `LOTTERY_ISSUE_COUNT` int(11) DEFAULT '0' COMMENT '开奖期数',
  `OPEN_ISSUE_COUNT` int(11) DEFAULT '0' COMMENT '开盘期数',
  `REPORT_DATE` timestamp NOT NULL COMMENT '报表日期',
  `UNLOTTERY_ISSUE_COUNT` int(11) DEFAULT '0' COMMENT '未开奖期数',
  `GAME_ID` int(11) NOT NULL COMMENT '彩种ID',
  `PLATFORM_TYPE` tinyint(4) NOT NULL COMMENT '平台类型(CT,KG)',
  `COUNT_USER` int(11) DEFAULT '0' COMMENT '该游戏每天玩家人数',
  PRIMARY KEY (`id`,`REPORT_DATE`),
  UNIQUE KEY `UNQ_TENANTCODE_DATE_GAME` (`TENANT_CODE`,`REPORT_DATE`,`GAME_ID`,`PLATFORM_TYPE`) USING BTREE,
  KEY `IDX_TENANT_CODE` (`TENANT_CODE`) USING BTREE,
  KEY `IDX_REPORT_DATE` (`REPORT_DATE`) USING BTREE,
  KEY `IDX_GAME_ID` (`GAME_ID`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='游戏报表'

t_report_team_platform  [REPORT_DATE]
ALTER TABLE t_report_team_platform PARTITION BY RANGE (to_days(REPORT_DATE))(
	PARTITION t_report_team_platform_201809 VALUES LESS THAN (to_days('2018-10-01'))ENGINE = InnoDB,
	PARTITION t_report_team_platform_201810 VALUES LESS THAN (to_days('2018-11-01'))ENGINE = InnoDB,
	PARTITION t_report_team_platform_201811 VALUES LESS THAN (to_days('2018-12-01'))ENGINE = InnoDB,
	PARTITION t_report_team_platform_201812 VALUES LESS THAN (to_days('2019-01-01'))ENGINE = InnoDB,
	PARTITION t_report_team_platform_201901 VALUES LESS THAN (to_days('2019-02-01'))ENGINE = InnoDB,
	PARTITION t_report_team_platform_201902 VALUES LESS THAN (to_days('2019-03-01'))ENGINE = InnoDB,
	PARTITION t_report_team_platform_201903 VALUES LESS THAN (to_days('2019-04-01'))ENGINE = InnoDB,
	PARTITION t_report_team_platform_201904 VALUES LESS THAN (to_days('2019-05-01'))ENGINE = InnoDB,
	PARTITION t_report_team_platform_201905 VALUES LESS THAN (to_days('2019-06-01'))ENGINE = InnoDB,
	PARTITION t_report_team_platform_201906 VALUES LESS THAN (to_days('2019-07-01'))ENGINE = InnoDB,
	PARTITION t_report_team_platform_201907 VALUES LESS THAN (MAXVALUE)ENGINE = InnoDB
);

drop table if exists t_report_team_platform;
CREATE TABLE `t_report_team_platform` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `USER_ID` int(11) NOT NULL COMMENT '用户ID',
  `PARENT_ID` int(11) DEFAULT NULL COMMENT '直属上级ID',
  `FLOOR` tinyint(4) DEFAULT NULL COMMENT '所在层级',
  `USER_NAME` varchar(16) NOT NULL COMMENT '用户帐号',
  `BALANCE_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '账户总额',
  `BET_GAIN_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '投注盈亏',
  `BET_ORDERS` int(11) DEFAULT '0' COMMENT '投注单数',
  `BET_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '投注总额',
  `WIN_ORDERS` int(11) DEFAULT '0' COMMENT '中奖单数',
  `WIN_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '中奖总额',
  `AGENT_REBATE_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '代理返点金额',
  `BET_REBATE_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '投注返点总额',
  `BET_USERS` int(11) DEFAULT '0' COMMENT '投注用户数',
  `REAL_GAIN_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '实际盈亏',
  `PLATFORM_TYPE` tinyint(4) NOT NULL COMMENT '平台类型(CP,KG,AG,BB,MG,PT)',
  `TENANT_CODE` varchar(10) DEFAULT NULL,
  `REPORT_DATE` date NOT NULL COMMENT '报表日期',
  PRIMARY KEY (`id`,`REPORT_DATE`),
  UNIQUE KEY `UNQ_REPORT_DATE_USER_ID_PLATFORM_TYPE` (`REPORT_DATE`,`USER_ID`,`PLATFORM_TYPE`) USING BTREE,
  KEY `IDX_REPOER_DATE` (`REPORT_DATE`),
  KEY `IDX_USER_ID` (`USER_ID`) USING BTREE,
  KEY `IDX_TENANT_CODE` (`TENANT_CODE`) USING BTREE,
  KEY `IDX_PARENT_ID` (`PARENT_ID`) USING BTREE,
  KEY `IDX_TENANT_CODE_REPORT_DATE` (`TENANT_CODE`,`REPORT_DATE`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8

t_report_tenant  [REPORT_DATE]
ALTER TABLE t_report_tenant PARTITION BY RANGE (to_days(REPORT_DATE))(
	PARTITION t_report_tenant_201809 VALUES LESS THAN (to_days('2018-10-01'))ENGINE = InnoDB,
	PARTITION t_report_tenant_201810 VALUES LESS THAN (to_days('2018-11-01'))ENGINE = InnoDB,
	PARTITION t_report_tenant_201811 VALUES LESS THAN (to_days('2018-12-01'))ENGINE = InnoDB,
	PARTITION t_report_tenant_201812 VALUES LESS THAN (to_days('2019-01-01'))ENGINE = InnoDB,
	PARTITION t_report_tenant_201901 VALUES LESS THAN (to_days('2019-02-01'))ENGINE = InnoDB,
	PARTITION t_report_tenant_201902 VALUES LESS THAN (to_days('2019-03-01'))ENGINE = InnoDB,
	PARTITION t_report_tenant_201903 VALUES LESS THAN (to_days('2019-04-01'))ENGINE = InnoDB,
	PARTITION t_report_tenant_201904 VALUES LESS THAN (to_days('2019-05-01'))ENGINE = InnoDB,
	PARTITION t_report_tenant_201905 VALUES LESS THAN (to_days('2019-06-01'))ENGINE = InnoDB,
	PARTITION t_report_tenant_201906 VALUES LESS THAN (to_days('2019-07-01'))ENGINE = InnoDB,
	PARTITION t_report_tenant_201907 VALUES LESS THAN (MAXVALUE)ENGINE = InnoDB
);

drop table if exists t_report_tenant;
CREATE TABLE `t_report_tenant` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `TENANT_CODE` varchar(10) NOT NULL COMMENT '租户代号',
  `ACTIVE_USERS` int(11) DEFAULT '0' COMMENT '有效用户数',
  `GAIN_MONEY_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '账面盈亏',
  `LOGINED_USERS` int(11) DEFAULT '0' COMMENT '登录用户数',
  `RECHARGE_FEE` decimal(18,5) DEFAULT '0.00000' COMMENT '用户充值手续费',
  `RECHARGE_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '用户充值总额',
  `REGISTERED_USERS` int(11) DEFAULT '0' COMMENT '新增注册用户数',
  `WITHDRAW_FEE_ACCEPT` decimal(18,5) DEFAULT '0.00000' COMMENT '用户提款手续费',
  `WITHDRAW_TOTAL_ACCEPT` decimal(18,5) DEFAULT '0.00000' COMMENT '用户提款总额',
  `ACTIVITY_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '活动赠送',
  `USER_BALANCE_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '用户账户总额',
  `BET_ORDERS` int(11) DEFAULT '0' COMMENT '投注单数',
  `BET_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '投注总额',
  `WIN_ORDERS` int(11) DEFAULT '0' COMMENT '中奖单数',
  `WIN_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '中奖总额',
  `AGENT_REBATE_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '代理返点金额',
  `BET_REBATE_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '投注返点总额',
  `UNSETTLED_ORDERS` int(11) DEFAULT '0' COMMENT '未结彩票注单数',
  `UNSETTLED_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '彩票未结注单总额',
  `IN_TIMES` int(11) DEFAULT '0' COMMENT '转入次数(CP,KG值为0)',
  `IN_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '转入总额(CP,KG值为0)',
  `OUT_TIMES` int(11) DEFAULT '0' COMMENT '转出次数(CP,KG值为0)',
  `OUT_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '转出总额(CP,KG值为0)',
  `REPORT_DATE` date NOT NULL COMMENT '报表日期',
  PRIMARY KEY (`id`,`REPORT_DATE`),
  UNIQUE KEY `UNQ_REPORT_DATE_TENANT_CODE` (`REPORT_DATE`,`TENANT_CODE`),
  KEY `IDX_TENANT_CODE` (`TENANT_CODE`) USING BTREE,
  KEY `IDX_REPORT_DATE` (`REPORT_DATE`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='公司报表'

t_report_tenant_platform  [REPORT_DATE]
ALTER TABLE t_report_tenant_platform PARTITION BY RANGE (to_days(REPORT_DATE))(
	PARTITION t_report_tenant_platform_201809 VALUES LESS THAN (to_days('2018-10-01'))ENGINE = InnoDB,
	PARTITION t_report_tenant_platform_201810 VALUES LESS THAN (to_days('2018-11-01'))ENGINE = InnoDB,
	PARTITION t_report_tenant_platform_201811 VALUES LESS THAN (to_days('2018-12-01'))ENGINE = InnoDB,
	PARTITION t_report_tenant_platform_201812 VALUES LESS THAN (to_days('2019-01-01'))ENGINE = InnoDB,
	PARTITION t_report_tenant_platform_201901 VALUES LESS THAN (to_days('2019-02-01'))ENGINE = InnoDB,
	PARTITION t_report_tenant_platform_201902 VALUES LESS THAN (to_days('2019-03-01'))ENGINE = InnoDB,
	PARTITION t_report_tenant_platform_201903 VALUES LESS THAN (to_days('2019-04-01'))ENGINE = InnoDB,
	PARTITION t_report_tenant_platform_201904 VALUES LESS THAN (to_days('2019-05-01'))ENGINE = InnoDB,
	PARTITION t_report_tenant_platform_201905 VALUES LESS THAN (to_days('2019-06-01'))ENGINE = InnoDB,
	PARTITION t_report_tenant_platform_201906 VALUES LESS THAN (to_days('2019-07-01'))ENGINE = InnoDB,
	PARTITION t_report_tenant_platform_201907 VALUES LESS THAN (MAXVALUE)ENGINE = InnoDB
);

drop table if exists t_report_tenant_platform;
CREATE TABLE `t_report_tenant_platform` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `TENANT_CODE` varchar(10) NOT NULL COMMENT '租户代号',
  `USER_BALANCE_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '用户账户总额',
  `BET_GAIN_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '投注盈亏',
  `UNSETTLED_ORDERS` int(11) DEFAULT '0' COMMENT '未结彩票注单数',
  `UNSETTLED_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '彩票未结注单总额',
  `BET_ORDERS` int(11) DEFAULT '0' COMMENT '投注单数',
  `BET_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '投注总额',
  `WIN_ORDERS` int(11) DEFAULT '0' COMMENT '中奖单数',
  `WIN_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '中奖总额',
  `AGENT_REBATE_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '代理返点金额',
  `BET_REBATE_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '投注返点总额',
  `REAL_GAIN_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '实际盈亏',
  `IN_TIMES` int(11) DEFAULT '0' COMMENT '转入次数(CP,KG值为0)',
  `IN_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '转入总额(CP,KG值为0)',
  `OUT_TIMES` int(11) DEFAULT '0' COMMENT '转出次数(CP,KG值为0)',
  `OUT_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '转出总额(CP,KG值为0)',
  `BET_USERS` int(11) DEFAULT '0' COMMENT 'AG投注用户数',
  `PLATFORM_TYPE` tinyint(4) NOT NULL COMMENT '平台类型(CP,KG,AG,BB,MG,PT)',
  `REPORT_DATE` date NOT NULL COMMENT '报表日期',
  PRIMARY KEY (`id`,`REPORT_DATE`),
  UNIQUE KEY `UNQ_REPORT_DATE_TENANT_CODE_PLATFORM_TYPE` (`REPORT_DATE`,`TENANT_CODE`,`PLATFORM_TYPE`) USING BTREE,
  KEY `IDX_TENANT_CODE` (`TENANT_CODE`) USING BTREE,
  KEY `IDX_REPORT_DATE` (`REPORT_DATE`) USING BTREE,
  KEY `IDX_PLATFORM_TYPE` (`PLATFORM_TYPE`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='公司平台报表'

t_report_user  [REPORT_DATE]
ALTER TABLE t_report_user PARTITION BY RANGE (to_days(REPORT_DATE))(
	PARTITION t_report_user_201809 VALUES LESS THAN (to_days('2018-10-01'))ENGINE = InnoDB,
	PARTITION t_report_user_201810 VALUES LESS THAN (to_days('2018-11-01'))ENGINE = InnoDB,
	PARTITION t_report_user_201811 VALUES LESS THAN (to_days('2018-12-01'))ENGINE = InnoDB,
	PARTITION t_report_user_201812 VALUES LESS THAN (to_days('2019-01-01'))ENGINE = InnoDB,
	PARTITION t_report_user_201901 VALUES LESS THAN (to_days('2019-02-01'))ENGINE = InnoDB,
	PARTITION t_report_user_201902 VALUES LESS THAN (to_days('2019-03-01'))ENGINE = InnoDB,
	PARTITION t_report_user_201903 VALUES LESS THAN (to_days('2019-04-01'))ENGINE = InnoDB,
	PARTITION t_report_user_201904 VALUES LESS THAN (to_days('2019-05-01'))ENGINE = InnoDB,
	PARTITION t_report_user_201905 VALUES LESS THAN (to_days('2019-06-01'))ENGINE = InnoDB,
	PARTITION t_report_user_201906 VALUES LESS THAN (to_days('2019-07-01'))ENGINE = InnoDB,
	PARTITION t_report_user_201907 VALUES LESS THAN (MAXVALUE)ENGINE = InnoDB
);

drop table if exists t_report_user;
CREATE TABLE `t_report_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `USER_ID` int(11) NOT NULL COMMENT '用户ID',
  `PARENT_ID` int(11) DEFAULT NULL COMMENT '直属上级ID',
  `FLOOR` tinyint(4) DEFAULT NULL COMMENT '所在层级',
  `USER_NAME` varchar(16) NOT NULL COMMENT '用户帐号',
  `TENANT_CODE` varchar(10) NOT NULL COMMENT '租户代号',
  `LOGIN_STATUS` tinyint(2) DEFAULT '0' COMMENT '当日是否登录',
  `RECHARGE_TIMES` int(11) DEFAULT '0' COMMENT '用户充值次数',
  `RECHARGE_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '用户充值总额',
  `TRANSFER_TIMES_RI` int(11) DEFAULT '0' COMMENT '上级转入次数',
  `TRAER_TIMES_RO` int(11) DEFAULT '0' COMMENT '转给下级次数',
  `TRANSFER_TOTAL_RI` decimal(18,5) DEFAULT '0.00000' COMMENT '上级转入总额',
  `TRANSFER_TOTAL_RO` decimal(18,5) DEFAULT '0.00000' COMMENT '转给下级总额',
  `WITHDRAW_TIMES` int(11) DEFAULT '0' COMMENT '用户提现次数',
  `WITHDRAW_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '用户提现总额',
  `ACTIVITY_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '活动赠送',
  `REPORT_DATE` date NOT NULL COMMENT '报表日期',
  `ACCOUNT_TYPE` tinyint(2) NOT NULL COMMENT '帐号类型',
  PRIMARY KEY (`id`,`REPORT_DATE`),
  UNIQUE KEY `UK_USER_ID_AND_REPORT_DATE` (`USER_ID`,`REPORT_DATE`) USING BTREE,
  KEY `IDX_TENANT_CODE` (`TENANT_CODE`) USING BTREE,
  KEY `IDX_USER_NAME` (`USER_NAME`) USING BTREE,
  KEY `IDX_REPORT_DATE` (`REPORT_DATE`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='用户报表'

t_report_user_platform  [REPORT_DATE]
ALTER TABLE t_report_user_platform PARTITION BY RANGE (to_days(REPORT_DATE))(
	PARTITION t_report_user_platform_201809 VALUES LESS THAN (to_days('2018-10-01'))ENGINE = InnoDB,
	PARTITION t_report_user_platform_201810 VALUES LESS THAN (to_days('2018-11-01'))ENGINE = InnoDB,
	PARTITION t_report_user_platform_201811 VALUES LESS THAN (to_days('2018-12-01'))ENGINE = InnoDB,
	PARTITION t_report_user_platform_201812 VALUES LESS THAN (to_days('2019-01-01'))ENGINE = InnoDB,
	PARTITION t_report_user_platform_201901 VALUES LESS THAN (to_days('2019-02-01'))ENGINE = InnoDB,
	PARTITION t_report_user_platform_201902 VALUES LESS THAN (to_days('2019-03-01'))ENGINE = InnoDB,
	PARTITION t_report_user_platform_201903 VALUES LESS THAN (to_days('2019-04-01'))ENGINE = InnoDB,
	PARTITION t_report_user_platform_201904 VALUES LESS THAN (to_days('2019-05-01'))ENGINE = InnoDB,
	PARTITION t_report_user_platform_201905 VALUES LESS THAN (to_days('2019-06-01'))ENGINE = InnoDB,
	PARTITION t_report_user_platform_201906 VALUES LESS THAN (to_days('2019-07-01'))ENGINE = InnoDB,
	PARTITION t_report_user_platform_201907 VALUES LESS THAN (MAXVALUE)ENGINE = InnoDB
);

drop table if exists t_report_user_platform;
CREATE TABLE `t_report_user_platform` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `USER_ID` int(11) NOT NULL COMMENT '用户ID',
  `PARENT_ID` int(11) DEFAULT NULL COMMENT '直属上级ID',
  `FLOOR` tinyint(4) DEFAULT NULL COMMENT '所在层级',
  `USER_NAME` varchar(16) NOT NULL COMMENT '用户帐号',
  `TENANT_CODE` varchar(10) NOT NULL COMMENT '租户代号',
  `BET_GAIN_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '投注盈亏',
  `UNSETTLED_ORDERS` int(11) DEFAULT '0' COMMENT '未结注单数',
  `UNSETTLED_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '未结订单总额',
  `BET_ORDERS` int(11) DEFAULT '0' COMMENT '投注单数',
  `BET_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '投注总额',
  `WIN_ORDERS` int(11) DEFAULT '0' COMMENT '中奖单数',
  `WIN_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '中奖总额',
  `AGENT_REBATE_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '代理返点金额',
  `BET_REBATE_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '投注返点总额',
  `REAL_GAIN_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '实际盈亏',
  `IN_TIMES` int(11) DEFAULT '0' COMMENT '转入次数(CT,KG值为0)',
  `IN_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '转入总额(CT,KG值为0)',
  `OUT_TIMES` int(11) DEFAULT '0' COMMENT '转出次数(CT,KG值为0)',
  `OUT_TOTAL` decimal(18,5) DEFAULT '0.00000' COMMENT '转出总额(CT,KG值为0)',
  `PLATFORM_TYPE` tinyint(4) NOT NULL COMMENT '平台类型(CT,KG,AG,BB,MG,PT)',
  `REPORT_DATE` date NOT NULL COMMENT '报表日期',
  `ACCOUNT_TYPE` tinyint(2) NOT NULL COMMENT '帐号类型',
  PRIMARY KEY (`id`,`REPORT_DATE`),
  UNIQUE KEY `UNQ_REPORT_DATE_USER_ID_PLATFORM_TYPE` (`REPORT_DATE`,`USER_ID`,`PLATFORM_TYPE`) USING BTREE,
  KEY `IDX_TENANT_CODE` (`TENANT_CODE`) USING BTREE,
  KEY `IDX_USER_NAME` (`USER_NAME`) USING BTREE,
  KEY `IDX_REPORT_DATE` (`REPORT_DATE`) USING BTREE,
  KEY `IDX_PLATFORM_TYPE` (`PLATFORM_TYPE`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='用户平台报表'

ALTER TABLE t_transaction MODIFY COLUMN TRANSACTION_TIME timestamp not NULL COMMENT '账变时间';
t_transaction  [TRANSACTION_TIME]
ALTER TABLE t_transaction PARTITION BY RANGE (UNIX_TIMESTAMP(TRANSACTION_TIME))(
	PARTITION t_transaction_201809 VALUES LESS THAN (UNIX_TIMESTAMP('2018-10-01'))ENGINE = InnoDB,
	PARTITION t_transaction_201810 VALUES LESS THAN (UNIX_TIMESTAMP('2018-11-01'))ENGINE = InnoDB,
	PARTITION t_transaction_201811 VALUES LESS THAN (UNIX_TIMESTAMP('2018-12-01'))ENGINE = InnoDB,
	PARTITION t_transaction_201812 VALUES LESS THAN (UNIX_TIMESTAMP('2019-01-01'))ENGINE = InnoDB,
	PARTITION t_transaction_201901 VALUES LESS THAN (UNIX_TIMESTAMP('2019-02-01'))ENGINE = InnoDB,
	PARTITION t_transaction_201902 VALUES LESS THAN (UNIX_TIMESTAMP('2019-03-01'))ENGINE = InnoDB,
	PARTITION t_transaction_201903 VALUES LESS THAN (UNIX_TIMESTAMP('2019-04-01'))ENGINE = InnoDB,
	PARTITION t_transaction_201904 VALUES LESS THAN (UNIX_TIMESTAMP('2019-05-01'))ENGINE = InnoDB,
	PARTITION t_transaction_201905 VALUES LESS THAN (UNIX_TIMESTAMP('2019-06-01'))ENGINE = InnoDB,
	PARTITION t_transaction_201906 VALUES LESS THAN (UNIX_TIMESTAMP('2019-07-01'))ENGINE = InnoDB,
	PARTITION t_transaction_201907 VALUES LESS THAN (MAXVALUE)ENGINE = InnoDB
);

drop table if exists t_transaction;
CREATE TABLE `t_transaction` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `TENANT_CODE` varchar(10) NOT NULL COMMENT '租户代号',
  `USER_ID` int(11) NOT NULL COMMENT '用户ID',
  `USER_NAME` varchar(16) NOT NULL COMMENT '用户帐号',
  `ORDERNO` longtext NOT NULL COMMENT '订单号(如果多个逗号隔开)',
  `BATCH_ORDERNO` varchar(40) DEFAULT NULL COMMENT '批订单号',
  `CURRENT_BALANCE` decimal(15,5) DEFAULT '0.00000' COMMENT '当前余额',
  `PREVIOUS_BALANCE` decimal(15,5) DEFAULT '0.00000' COMMENT '账变前余额',
  `TRANSACTION_AMOUNT` decimal(15,5) DEFAULT '0.00000' COMMENT '账变金额',
  `TRANSACTION_DIRECTION` tinyint(2) DEFAULT NULL COMMENT '账变方向 1收入;2支出',
  `TRANSACTION_SUBCLASS` tinyint(2) NOT NULL COMMENT '账变细类',
  `TRANSACTION_TIME` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '账变时间',
  `TRANSACTION_TYPE` tinyint(2) DEFAULT NULL COMMENT '账变类型',
  `PLATFORM_TYPE` tinyint(2) NOT NULL COMMENT '平台类型',
  PRIMARY KEY (`id`,`TRANSACTION_TIME`),
  KEY `IDX_USER_ID` (`USER_ID`) USING BTREE,
  KEY `IDX_TENANT_CODE` (`TENANT_CODE`) USING BTREE,
  KEY `IDX_TRANSACTION_TIME` (`TRANSACTION_TIME`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='账变流水表'

ALTER TABLE t_lottery_number MODIFY COLUMN OPERATE_TIME timestamp not NULL COMMENT '操作时间';
t_lottery_number  [OPERATE_TIME]
ALTER TABLE t_lottery_number PARTITION BY RANGE (UNIX_TIMESTAMP(OPERATE_TIME))(
	PARTITION t_lottery_number_201809 VALUES LESS THAN (UNIX_TIMESTAMP('2018-10-01'))ENGINE = InnoDB,
	PARTITION t_lottery_number_201810 VALUES LESS THAN (UNIX_TIMESTAMP('2018-11-01'))ENGINE = InnoDB,
	PARTITION t_lottery_number_201811 VALUES LESS THAN (UNIX_TIMESTAMP('2018-12-01'))ENGINE = InnoDB,
	PARTITION t_lottery_number_201812 VALUES LESS THAN (UNIX_TIMESTAMP('2019-01-01'))ENGINE = InnoDB,
	PARTITION t_lottery_number_201901 VALUES LESS THAN (UNIX_TIMESTAMP('2019-02-01'))ENGINE = InnoDB,
	PARTITION t_lottery_number_201902 VALUES LESS THAN (UNIX_TIMESTAMP('2019-03-01'))ENGINE = InnoDB,
	PARTITION t_lottery_number_201903 VALUES LESS THAN (UNIX_TIMESTAMP('2019-04-01'))ENGINE = InnoDB,
	PARTITION t_lottery_number_201904 VALUES LESS THAN (UNIX_TIMESTAMP('2019-05-01'))ENGINE = InnoDB,
	PARTITION t_lottery_number_201905 VALUES LESS THAN (UNIX_TIMESTAMP('2019-06-01'))ENGINE = InnoDB,
	PARTITION t_lottery_number_201906 VALUES LESS THAN (UNIX_TIMESTAMP('2019-07-01'))ENGINE = InnoDB,
	PARTITION t_lottery_number_201907 VALUES LESS THAN (MAXVALUE)ENGINE = InnoDB
);

drop table if exists t_lottery_number;
CREATE TABLE `t_lottery_number` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `TENANT_CODE` varchar(10) DEFAULT NULL COMMENT '租户代号',
  `OPEN_TIME` timestamp NULL DEFAULT NULL COMMENT '开盘时间',
  `CLOSE_TIME` timestamp NULL DEFAULT NULL COMMENT '封盘时间',
  `SCHEDULED_LOTTERY_TIME` timestamp NULL DEFAULT NULL COMMENT '预定开奖时间',
  `LOTTERY_TIME` timestamp NULL DEFAULT NULL COMMENT '实际开奖时间',
  `GAME_ID` int(11) NOT NULL COMMENT '彩种ID',
  `ISSUE` varchar(20) NOT NULL COMMENT '期号',
  `LOTTERY_NUMBER` varchar(96) DEFAULT NULL COMMENT '开奖号码',
  `LOTTERY_TYPE` tinyint(2) DEFAULT NULL COMMENT '开奖方式 1手动；2自动',
  `REBATE_TOTAL` decimal(15,5) DEFAULT '0.00000' COMMENT '返点总额(投注返点+代理返点) ',
  `SECRET` varchar(32) DEFAULT NULL COMMENT '加密信息',
  `STATUS` tinyint(2) NOT NULL COMMENT '状态',
  `WIN_MONEY_TOTAL` decimal(15,5) DEFAULT '0.00000' COMMENT '中奖总额',
  `WIN_ORDERS` int(11) DEFAULT '0' COMMENT '中奖注单数',
  `OPERATE_TIME` timestamp not NULL COMMENT '操作时间',
  `OPERATOR` varchar(20) NOT NULL COMMENT '操作者',
  `CRAWLER_TIME_COST` int(11) DEFAULT '0' COMMENT '开奖号码采集耗时',
  `CRAWLER_URL_DESCRIPTION` varchar(20) DEFAULT NULL COMMENT '开奖号码采集来源',
  `REMARK` varchar(50) DEFAULT NULL COMMENT '备注',
  PRIMARY KEY (`id`,`OPERATE_TIME`),
  UNIQUE KEY `UNQ_TENANTCODE_GAMEID_ISSUE` (`TENANT_CODE`,`GAME_ID`,`ISSUE`,`OPERATE_TIME`) USING BTREE,
  KEY `IDX_GAME_ID` (`GAME_ID`) USING BTREE,
  KEY `IDX_ISSUE` (`ISSUE`) USING BTREE,
  KEY `IDX_SCHEDULED_LOTTERY_TIME` (`SCHEDULED_LOTTERY_TIME`) USING BTREE,
  KEY `IDX_CLOSE_TIME` (`CLOSE_TIME`) USING BTREE,
  KEY `IDX_TENANT_CODE_OPEN_TIME` (`TENANT_CODE`,`OPEN_TIME`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='期号表'